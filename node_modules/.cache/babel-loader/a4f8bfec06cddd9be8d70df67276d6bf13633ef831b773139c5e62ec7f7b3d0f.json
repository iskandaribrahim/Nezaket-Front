{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nfunction getScale(element, paramRect) {\n  const rect = paramRect || element.getBoundingClientRect();\n  return {\n    x: element.offsetWidth > 0 ? round(rect.width) / element.offsetWidth || 1 : 1,\n    y: element.offsetHeight > 0 ? round(rect.height) / element.offsetHeight || 1 : 1\n  };\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(\n  // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  let contextRect = clientRect;\n  let elementToCheckForScale = element;\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  if (!isElement(element) && element.contextElement) {\n    contextRect = element.contextElement.getBoundingClientRect();\n    elementToCheckForScale = element.contextElement;\n  }\n  if (includeScale && isHTMLElement(elementToCheckForScale)) {\n    scale = getScale(elementToCheckForScale, contextRect);\n  }\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element,\n  // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot ||\n  // DOM Element detected\n  node.parentNode || (\n  // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) ||\n  // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\nfunction getClippingElementAncestors(element) {\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","min","Math","max","round","getScale","element","paramRect","rect","getBoundingClientRect","x","offsetWidth","width","y","offsetHeight","height","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle","getNodeName","isNode","nodeName","toLowerCase","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","value","HTMLElement","isElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isLayoutViewport","isLastTraversableNode","includeScale","isFixedStrategy","_win$visualViewport$o","_win$visualViewport","_win$visualViewport$o2","_win$visualViewport2","clientRect","contextRect","elementToCheckForScale","scale","contextElement","win","addVisualOffsets","left","visualViewport","offsetLeft","top","offsetTop","right","bottom","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","isScaled","getRectRelativeToOffsetParent","offsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","clientLeft","clientTop","getParentNode","result","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","getClippingElementAncestors","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","getClippingRect","boundary","rootBoundary","elementClippingAncestors","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame"],"sources":["C:/Users/Ibrahim/Desktop/Glob_az-CargoShippingCompany-main/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getScale(element, paramRect) {\n  const rect = paramRect || element.getBoundingClientRect();\n  return {\n    x: element.offsetWidth > 0 ? round(rect.width) / element.offsetWidth || 1 : 1,\n    y: element.offsetHeight > 0 ? round(rect.height) / element.offsetHeight || 1 : 1\n  };\n}\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some( // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let contextRect = clientRect;\n  let elementToCheckForScale = element;\n  let scale = {\n    x: 1,\n    y: 1\n  };\n\n  if (!isElement(element) && element.contextElement) {\n    contextRect = element.contextElement.getBoundingClientRect();\n    elementToCheckForScale = element.contextElement;\n  }\n\n  if (includeScale && isHTMLElement(elementToCheckForScale)) {\n    scale = getScale(elementToCheckForScale, contextRect);\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot || // DOM Element detected\n  node.parentNode || ( // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) || // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingElementAncestors(element) {\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}