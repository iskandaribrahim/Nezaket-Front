{"ast":null,"code":"import React__default from 'react';\nimport NavModuleCss from './index.module.css.js';\nimport { useController } from '../../modules/Controller.js';\nimport { useManager } from '../../modules/Manager.js';\nimport { composeCssClasses } from '../../utils/composeCssClasses.js';\nfunction Nav(_ref) {\n  var color = _ref.color,\n    activeColor = _ref.activeColor,\n    _ref$position = _ref.position,\n    position = _ref$position === void 0 ? {\n      bottom: '1.5rem',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    } : _ref$position;\n  var _useManager = useManager(),\n    _useManager$state = _useManager.state,\n    slides = _useManager$state.slides,\n    totalSlides = _useManager$state.totalSlides;\n  var _useController = useController(),\n    activeSlide = _useController.state.activeSlide,\n    changeSlide = _useController.changeSlide;\n  function renderButtons() {\n    if (!totalSlides) return [];\n    var onClickHandler = function onClickHandler(slideNumber) {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n    return Array.from(slides.values()).map(function (_ref2) {\n      var number = _ref2.number;\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        React__default.createElement(\"li\", {\n          key: number,\n          className: composeCssClasses('hero-slider-nav-button', NavModuleCss.Button, {\n            className: NavModuleCss.Active,\n            useIf: activeSlide === number\n          }),\n          onClick: function onClick() {\n            return onClickHandler(number);\n          }\n        })\n      );\n    });\n  }\n  /**\n   * CSS variables for the transitions.\n   */\n  var CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n  return React__default.createElement(\"ul\", {\n    className: composeCssClasses('hero-slider-nav-wrapper', NavModuleCss.Wrapper),\n    style: Object.assign(Object.assign({}, position), CSSVariables)\n  }, renderButtons());\n}\nNav.displayName = 'hero-slider/nav';\nexport { Nav };","map":{"version":3,"mappings":";;;;;AA0CM,SAAUA,GAAG,OAQR;EAAA,IAPTC,KAAK,QAALA,KAAK;IACLC,WAAW,QAAXA,WAAW;IAAA,qBACXC,QAAQ;IAARA,QAAQ,8BAAG;MACTC,MAAM,EAAE,QAAQ;MAChBC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE;KACZ;EAED,kBAEIC,UAAU,EAAE;IAAA,gCADdC,KAAK;IAAIC,MAAM,qBAANA,MAAM;IAAEC,WAAW,qBAAXA,WAAW;EAG9B,qBAGIC,aAAa,EAAE;IAFRC,WAAW,kBAApBJ,KAAK,CAAII,WAAW;IACpBC,WAAW,kBAAXA,WAAW;EAGb,SAASC,aAAa;IACpB,IAAI,CAACJ,WAAW,EAAE,OAAO,EAAE;IAE3B,IAAMK,cAAc,GAAG,SAAjBA,cAAc,CAAIC,WAAmB,EAAI;MAC7C,IAAIA,WAAW,KAAKJ,WAAW,EAAEC,WAAW,CAACG,WAAW,CAAC;IAC3D,CAAC;IAED,OAAOC,KAAK,CAACC,IAAI,CAACT,MAAM,CAACU,MAAM,EAAE,CAAC,CAACC,GAAG,CAAC,iBAAe;MAAA,IAAZC,MAAM,SAANA,MAAM;MAC9C;;;QAGEC;UACEC,GAAG,EAAEF,MAAM;UACXG,SAAS,EAAEC,iBAAiB,CAC1B,wBAAwB,EACxBC,YAAY,CAACC,MAAM,EACnB;YAAEH,SAAS,EAAEE,YAAY,CAACE,MAAM;YAAEC,KAAK,EAAEjB,WAAW,KAAKS;UAAM,CAAE,CAClE;UACDS,OAAO,EAAE;YAAA,OAAMf,cAAc,CAACM,MAAM,CAAC;UAAA;QAAA;MACrC;IAEN,CAAC,CAAC;;EAGJ;;AAEG;EACH,IAAMU,YAAY,GAAG;IACnB,aAAa,EAAE9B,KAAK;IACpB,oBAAoB,EAAEC;GACvB;EAED,OACEoB;IACEE,SAAS,EAAEC,iBAAiB,CAC1B,yBAAyB,EACzBC,YAAY,CAACM,OAAO,CACrB;IACDC,KAAK,EACAC,wCAAQ,CACR,cAAY;EAAA,GAGhBpB,aAAa,EAAE,CACb;AAET;AAECd,GAA+B,CAACmC,WAAW,GAAG,iBAAiB","names":["Nav","color","activeColor","position","bottom","left","transform","useManager","state","slides","totalSlides","useController","activeSlide","changeSlide","renderButtons","onClickHandler","slideNumber","Array","from","values","map","number","React","key","className","composeCssClasses","NavModuleCss","Button","Active","useIf","onClick","CSSVariables","Wrapper","style","Object","displayName"],"sources":["C:\\Users\\Ibrahim\\Desktop\\Glob_az-CargoShippingCompany-main\\node_modules\\hero-slider\\src\\components\\Nav\\index.tsx"],"sourcesContent":["import React from 'react';\nimport NavModuleCss from './index.module.css';\nimport { useController } from '../../modules/Controller';\nimport { useManager } from '../../modules/Manager';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\n\n/**\n * Defines the position of the navigation component.\n */\nexport interface NavPosition {\n  top?: React.CSSProperties['top'];\n  left?: React.CSSProperties['left'];\n  bottom?: React.CSSProperties['bottom'];\n  right?: React.CSSProperties['right'];\n  transform?: React.CSSProperties['transform'];\n}\n\n/**\n * `Nav` component props.\n */\nexport interface NavProps {\n  /**\n   * Object of CSS properties `top`, `left`, `bottom`, and `right` used to absolutely position elements.\n   * Aside from the former, you can also set the CSS `transform` property to help you center the element.\n   * @default\n   * {\n   *    bottom: '1.5rem',\n   *    left: '50%',\n   *    transform: 'translateX(-50%)'\n   * }\n   */\n  position?: NavPosition;\n  /**\n   * Defines `--nav-color` CSS variable.\n   */\n  color?: string;\n  /**\n   * Defines `--nav-active-color` CSS variable.\n   */\n  activeColor?: string;\n}\n\nexport function Nav({\n  color,\n  activeColor,\n  position = {\n    bottom: '1.5rem',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  }\n}: NavProps) {\n  const {\n    state: { slides, totalSlides }\n  } = useManager();\n\n  const {\n    state: { activeSlide },\n    changeSlide\n  } = useController();\n\n  function renderButtons() {\n    if (!totalSlides) return [];\n\n    const onClickHandler = (slideNumber: number) => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n\n    return Array.from(slides.values()).map(({ number }) => {\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        <li\n          key={number}\n          className={composeCssClasses(\n            'hero-slider-nav-button',\n            NavModuleCss.Button,\n            { className: NavModuleCss.Active, useIf: activeSlide === number }\n          )}\n          onClick={() => onClickHandler(number)}\n        />\n      );\n    });\n  }\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n\n  return (\n    <ul\n      className={composeCssClasses(\n        'hero-slider-nav-wrapper',\n        NavModuleCss.Wrapper\n      )}\n      style={{\n        ...position,\n        ...CSSVariables\n      }}\n    >\n      {renderButtons()}\n    </ul>\n  );\n}\n\n(Nav as React.FunctionComponent).displayName = 'hero-slider/nav';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}