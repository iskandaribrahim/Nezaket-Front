{"ast":null,"code":"import _defineProperty from \"C:/Users/Ibrahim/Desktop/Glob_az-CargoShippingCompany-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _SlidingAnimationCssC;\nimport React__default from 'react';\nimport HeroSliderModuleCss from '../HeroSlider.module.css.js';\nimport { useAccessability, AccessabilityOrientation } from './Accessability.js';\nvar SlidingAnimation;\n(function (SlidingAnimation) {\n  SlidingAnimation[\"TOP_TO_BOTTOM\"] = \"top_to_bottom\";\n  SlidingAnimation[\"BOTTOM_TO_TOP\"] = \"bottom_to_top\";\n  SlidingAnimation[\"LEFT_TO_RIGHT\"] = \"left_to_right\";\n  SlidingAnimation[\"RIGHT_TO_LEFT\"] = \"right_to_left\";\n  SlidingAnimation[\"FADE\"] = \"fade\";\n})(SlidingAnimation || (SlidingAnimation = {}));\nvar SlidingAnimationCssClassMap = (_SlidingAnimationCssC = {}, _defineProperty(_SlidingAnimationCssC, SlidingAnimation.FADE, HeroSliderModuleCss.Sliding_Fade_In), _defineProperty(_SlidingAnimationCssC, SlidingAnimation.TOP_TO_BOTTOM, HeroSliderModuleCss.Sliding_Top_To_Bottom), _defineProperty(_SlidingAnimationCssC, SlidingAnimation.BOTTOM_TO_TOP, HeroSliderModuleCss.Sliding_Bottom_To_Top), _defineProperty(_SlidingAnimationCssC, SlidingAnimation.LEFT_TO_RIGHT, HeroSliderModuleCss.Sliding_Left_To_Right), _defineProperty(_SlidingAnimationCssC, SlidingAnimation.RIGHT_TO_LEFT, HeroSliderModuleCss.Sliding_Right_To_Left), _SlidingAnimationCssC);\nvar defaultProps = {\n  slidingAnimation: 'wipe',\n  sliderFadeInDuration: 100,\n  navbarFadeInDuration: 1000,\n  navbarFadeInDelay: 500,\n  shouldManageAnimationSequence: true\n};\nvar AnimationsStateContext = React__default.createContext(undefined);\nfunction AnimationsProvider(_ref) {\n  var children = _ref.children,\n    animations = _ref.animations;\n  var _a, _b, _c, _d;\n  var _useAccessability = useAccessability(),\n    orientation = _useAccessability.orientation;\n  var params = {\n    slidingAnimation: (animations === null || animations === void 0 ? void 0 : animations.slidingAnimation) || defaultProps.slidingAnimation,\n    sliderFadeInDuration: (_a = animations === null || animations === void 0 ? void 0 : animations.sliderFadeInDuration) !== null && _a !== void 0 ? _a : defaultProps.sliderFadeInDuration,\n    navbarFadeInDuration: (_b = animations === null || animations === void 0 ? void 0 : animations.navbarFadeInDuration) !== null && _b !== void 0 ? _b : defaultProps.navbarFadeInDuration,\n    navbarFadeInDelay: (_c = animations === null || animations === void 0 ? void 0 : animations.navbarFadeInDelay) !== null && _c !== void 0 ? _c : defaultProps.navbarFadeInDelay,\n    shouldManageAnimationSequence: (_d = animations === null || animations === void 0 ? void 0 : animations.shouldManageAnimationSequence) !== null && _d !== void 0 ? _d : defaultProps.shouldManageAnimationSequence\n  };\n  var getSlidingAnimationCssClass = function getSlidingAnimationCssClass(activeSlide, prevActiveSlide, slidingDirection) {\n    var getSlidingAnimation = function getSlidingAnimation() {\n      switch (params.slidingAnimation) {\n        case 'fade':\n          return SlidingAnimation.FADE;\n        case 'wipe':\n          {\n            var direction;\n            if (slidingDirection) direction = slidingDirection;else {\n              var isSlidingForward = activeSlide > prevActiveSlide;\n              direction = isSlidingForward ? 'forward' : 'backward';\n            }\n            if (direction === 'forward') return orientation === AccessabilityOrientation.HORIZONTAL ? SlidingAnimation.RIGHT_TO_LEFT : SlidingAnimation.BOTTOM_TO_TOP;else return orientation === AccessabilityOrientation.HORIZONTAL ? SlidingAnimation.LEFT_TO_RIGHT : SlidingAnimation.TOP_TO_BOTTOM;\n          }\n        default:\n          {\n            throw new Error(\"Unhandled sliding animation: [\".concat(params.slidingAnimation, \"]\"));\n          }\n      }\n    };\n    return SlidingAnimationCssClassMap[getSlidingAnimation()];\n  };\n  // NOTE: you *might* need to memoize this value\n  // Learn more in http://kcd.im/optimize-context\n  var value = {\n    sliderFadeInDuration: params.sliderFadeInDuration,\n    navbarFadeInDuration: params.sliderFadeInDuration,\n    navbarFadeInDelay: params.sliderFadeInDuration,\n    getSlidingAnimationCssClass: getSlidingAnimationCssClass\n  };\n  return React__default.createElement(AnimationsStateContext.Provider, {\n    value: value\n  }, children);\n}\nfunction useAnimations() {\n  var context = React__default.useContext(AnimationsStateContext);\n  if (context === undefined) {\n    throw new Error('useAnimations must be used within a AnimationsProvider');\n  }\n  return context;\n}\nexport { AnimationsProvider, useAnimations };","map":{"version":3,"mappings":"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","names":["SlidingAnimation","SlidingAnimationCssClassMap","FADE","HeroSliderModuleCss","Sliding_Fade_In","TOP_TO_BOTTOM","Sliding_Top_To_Bottom","BOTTOM_TO_TOP","Sliding_Bottom_To_Top","LEFT_TO_RIGHT","Sliding_Left_To_Right","RIGHT_TO_LEFT","Sliding_Right_To_Left","defaultProps","slidingAnimation","sliderFadeInDuration","navbarFadeInDuration","navbarFadeInDelay","shouldManageAnimationSequence","AnimationsStateContext","React","createContext","undefined","AnimationsProvider","children","animations","useAccessability","orientation","params","getSlidingAnimationCssClass","activeSlide","prevActiveSlide","slidingDirection","getSlidingAnimation","direction","isSlidingForward","AccessabilityOrientation","HORIZONTAL","Error","value","Provider","useAnimations","context","useContext"],"sources":["C:\\Users\\Ibrahim\\Desktop\\Glob_az-CargoShippingCompany-main\\node_modules\\hero-slider\\src\\modules\\Animations.tsx"],"sourcesContent":["import React from 'react';\nimport HeroSliderModuleCss from '../HeroSlider.module.css';\nimport { AccessabilityOrientation, useAccessability } from './Accessability';\n\nenum SlidingAnimation {\n  TOP_TO_BOTTOM = 'top_to_bottom',\n  BOTTOM_TO_TOP = 'bottom_to_top',\n  LEFT_TO_RIGHT = 'left_to_right',\n  RIGHT_TO_LEFT = 'right_to_left',\n  FADE = 'fade'\n}\n\nexport interface AnimationsProps {\n  /**\n   * The sliding animations during transitions.\n   * @default 'wipe'\n   */\n  slidingAnimation?: 'fade' | 'wipe';\n  /**\n   * Fade in duration of the slider during mount, in milliseconds.\n   * @default 100\n   */\n  sliderFadeInDuration?: number;\n  /**\n   * Navbars fade in duration, in milliseconds.\n   * @default 1000\n   */\n  navbarFadeInDuration?: number;\n  /**\n   * Navbars fade in delay, in milliseconds.\n   * @default 500\n   */\n  navbarFadeInDelay?: number;\n  /**\n   * When `true`, the `hero-slider` will know which animation should be set next.\n   * For example, if the user is selecting the next slide, the animation would be different to the one if the user had selected the previous slide.\n   * The animations will essentially be the same, but moving to different directions (e.g. left or right, or right to left).\n   * @default true\n   */\n  shouldManageAnimationSequence?: boolean;\n}\n\ntype ProviderProps = React.PropsWithChildren<{ animations?: AnimationsProps }>;\n\ninterface GetSlidingAnimationCssClass {\n  (\n    activeSlide: number,\n    prevActiveSlide: number,\n    slidingDirection?: 'forward' | 'backward'\n  ): string;\n}\n\nconst SlidingAnimationCssClassMap: Record<SlidingAnimation, string> = {\n  [SlidingAnimation.FADE]: HeroSliderModuleCss.Sliding_Fade_In,\n  [SlidingAnimation.TOP_TO_BOTTOM]: HeroSliderModuleCss.Sliding_Top_To_Bottom,\n  [SlidingAnimation.BOTTOM_TO_TOP]: HeroSliderModuleCss.Sliding_Bottom_To_Top,\n  [SlidingAnimation.LEFT_TO_RIGHT]: HeroSliderModuleCss.Sliding_Left_To_Right,\n  [SlidingAnimation.RIGHT_TO_LEFT]: HeroSliderModuleCss.Sliding_Right_To_Left\n};\n\nconst defaultProps: Required<AnimationsProps> = {\n  slidingAnimation: 'wipe',\n  sliderFadeInDuration: 100,\n  navbarFadeInDuration: 1000,\n  navbarFadeInDelay: 500,\n  shouldManageAnimationSequence: true\n};\n\nconst AnimationsStateContext = React.createContext<\n  | {\n      sliderFadeInDuration: number;\n      navbarFadeInDuration: number;\n      navbarFadeInDelay: number;\n      getSlidingAnimationCssClass: GetSlidingAnimationCssClass;\n    }\n  | undefined\n>(undefined);\n\nfunction AnimationsProvider({ children, animations }: ProviderProps) {\n  const { orientation } = useAccessability();\n\n  const params: Required<AnimationsProps> = {\n    slidingAnimation:\n      animations?.slidingAnimation || defaultProps.slidingAnimation,\n    sliderFadeInDuration:\n      animations?.sliderFadeInDuration ?? defaultProps.sliderFadeInDuration,\n    navbarFadeInDuration:\n      animations?.navbarFadeInDuration ?? defaultProps.navbarFadeInDuration,\n    navbarFadeInDelay:\n      animations?.navbarFadeInDelay ?? defaultProps.navbarFadeInDelay,\n    shouldManageAnimationSequence:\n      animations?.shouldManageAnimationSequence ??\n      defaultProps.shouldManageAnimationSequence\n  };\n\n  const getSlidingAnimationCssClass: GetSlidingAnimationCssClass = (\n    activeSlide,\n    prevActiveSlide,\n    slidingDirection\n  ): string => {\n    const getSlidingAnimation = (): SlidingAnimation => {\n      switch (params.slidingAnimation) {\n        case 'fade':\n          return SlidingAnimation.FADE;\n        case 'wipe': {\n          let direction: 'forward' | 'backward';\n\n          if (slidingDirection) direction = slidingDirection;\n          else {\n            const isSlidingForward = activeSlide > prevActiveSlide;\n            direction = isSlidingForward ? 'forward' : 'backward';\n          }\n\n          if (direction === 'forward')\n            return orientation === AccessabilityOrientation.HORIZONTAL\n              ? SlidingAnimation.RIGHT_TO_LEFT\n              : SlidingAnimation.BOTTOM_TO_TOP;\n          else\n            return orientation === AccessabilityOrientation.HORIZONTAL\n              ? SlidingAnimation.LEFT_TO_RIGHT\n              : SlidingAnimation.TOP_TO_BOTTOM;\n        }\n        default: {\n          throw new Error(\n            `Unhandled sliding animation: [${params.slidingAnimation}]`\n          );\n        }\n      }\n    };\n\n    return SlidingAnimationCssClassMap[getSlidingAnimation()];\n  };\n\n  // NOTE: you *might* need to memoize this value\n  // Learn more in http://kcd.im/optimize-context\n  const value = {\n    sliderFadeInDuration: params.sliderFadeInDuration,\n    navbarFadeInDuration: params.sliderFadeInDuration,\n    navbarFadeInDelay: params.sliderFadeInDuration,\n    getSlidingAnimationCssClass\n  };\n\n  return (\n    <AnimationsStateContext.Provider value={value}>\n      {children}\n    </AnimationsStateContext.Provider>\n  );\n}\n\nfunction useAnimations() {\n  const context = React.useContext(AnimationsStateContext);\n\n  if (context === undefined) {\n    throw new Error('useAnimations must be used within a AnimationsProvider');\n  }\n\n  return context;\n}\n\nexport { AnimationsProvider, useAnimations };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}