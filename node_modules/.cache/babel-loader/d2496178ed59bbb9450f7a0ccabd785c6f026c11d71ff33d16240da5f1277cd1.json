{"ast":null,"code":"import _classCallCheck from \"C:/Users/Ibrahim/Desktop/Glob_az-CargoShippingCompany-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Ibrahim/Desktop/Glob_az-CargoShippingCompany-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * ConsoleLogger singleton.\n */\nvar ConsoleLogger = /*#__PURE__*/function () {\n  function ConsoleLogger(levels) {\n    _classCallCheck(this, ConsoleLogger);\n    this.levels = levels;\n  }\n  _createClass(ConsoleLogger, [{\n    key: \"log\",\n    value: function log() {\n      var _console;\n      // eslint-disable-next-line no-console\n      if (this.levels.verbose) (_console = console).log.apply(_console, arguments);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      var _console2;\n      if (this.levels.info) (_console2 = console).info.apply(_console2, arguments);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      var _console3;\n      if (this.levels.debug) (_console3 = console).debug.apply(_console3, arguments);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      var _console4;\n      if (this.levels.warnings) (_console4 = console).warn.apply(_console4, arguments);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      var _console5;\n      if (this.levels.errors) (_console5 = console).error.apply(_console5, arguments);\n    }\n  }], [{\n    key: \"new\",\n    value: function _new() {\n      var levels = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        verbose: false,\n        info: false,\n        debug: false,\n        warnings: true,\n        errors: true\n      };\n      if (!this.instance) this.instance = new ConsoleLogger(levels);else this.instance.levels = levels;\n      return this.instance;\n    }\n  }]);\n  return ConsoleLogger;\n}();\nexport { ConsoleLogger as default };","map":{"version":3,"mappings":";;AAQA;;AAEG;AAFH,IAGqBA,aAAa;EAChC,uBAA4BC,MAAoB;IAAA;IAApB,IAAM,UAANA,MAAM;;EAAkB;IAAA;IAAA,OAE7C,eAAsB;MAAA;;MAE3B,IAAI,IAAI,CAACA,MAAM,CAACC,OAAO,EAAE,mBAAO,EAACC,GAAG,2BAAS;;EAC9C;IAAA;IAAA,OAEM,gBAAuB;MAAA;MAC5B,IAAI,IAAI,CAACF,MAAM,CAACG,IAAI,EAAE,oBAAO,EAACA,IAAI,4BAAS;;EAC5C;IAAA;IAAA,OAEM,iBAAwB;MAAA;MAC7B,IAAI,IAAI,CAACH,MAAM,CAACI,KAAK,EAAE,oBAAO,EAACA,KAAK,4BAAS;;EAC9C;IAAA;IAAA,OAEM,gBAAuB;MAAA;MAC5B,IAAI,IAAI,CAACJ,MAAM,CAACK,QAAQ,EAAE,oBAAO,EAACC,IAAI,4BAAS;;EAChD;IAAA;IAAA,OAEM,iBAAwB;MAAA;MAC7B,IAAI,IAAI,CAACN,MAAM,CAACO,MAAM,EAAE,oBAAO,EAACC,KAAK,4BAAS;;EAC/C;IAAA;IAAA,OAIM,gBAOJ;MAAA,IANDR,MAAuB;QACrBC,OAAO,EAAE,KAAK;QACdE,IAAI,EAAE,KAAK;QACXC,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE,IAAI;QACdE,MAAM,EAAE;MACT;MAED,IAAI,CAAC,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACA,QAAQ,GAAG,IAAIV,aAAa,CAACC,MAAM,CAAC,CAAC,KACzD,IAAI,CAACS,QAAQ,CAACT,MAAM,GAAGA,MAAM;MAClC,OAAO,IAAI,CAACS,QAAQ;;EACrB;EAAA;AAAA","names":["ConsoleLogger","levels","verbose","log","info","debug","warnings","warn","errors","error","instance"],"sources":["C:\\Users\\Ibrahim\\Desktop\\Glob_az-CargoShippingCompany-main\\node_modules\\hero-slider\\src\\modules\\ConsoleLogger.tsx"],"sourcesContent":["export type LoggerLevels = {\n  verbose: boolean;\n  info: boolean;\n  debug: boolean;\n  warnings: boolean;\n  errors: boolean;\n};\n\n/**\n * ConsoleLogger singleton.\n */\nexport default class ConsoleLogger {\n  private constructor(private levels: LoggerLevels) {}\n\n  public log(...data: unknown[]): void {\n    // eslint-disable-next-line no-console\n    if (this.levels.verbose) console.log(...data);\n  }\n\n  public info(...data: unknown[]): void {\n    if (this.levels.info) console.info(...data);\n  }\n\n  public debug(...data: unknown[]): void {\n    if (this.levels.debug) console.debug(...data);\n  }\n\n  public warn(...data: unknown[]): void {\n    if (this.levels.warnings) console.warn(...data);\n  }\n\n  public error(...data: unknown[]): void {\n    if (this.levels.errors) console.error(...data);\n  }\n\n  private static instance: ConsoleLogger | undefined;\n\n  public static new(\n    levels: LoggerLevels = {\n      verbose: false,\n      info: false,\n      debug: false,\n      warnings: true,\n      errors: true\n    }\n  ): ConsoleLogger {\n    if (!this.instance) this.instance = new ConsoleLogger(levels);\n    else this.instance.levels = levels;\n    return this.instance;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}