{"ast":null,"code":"import _slicedToArray from \"C:/Users/Ibrahim/Desktop/Glob_az-CargoShippingCompany-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React__default from 'react';\nimport SlideModuleCss from './index.module.css.js';\nimport Background from './Background/index.js';\nimport Mask from './Mask/index.js';\nimport { useManager } from '../../modules/Manager.js';\nimport { useController } from '../../modules/Controller.js';\nimport { useAnimations } from '../../modules/Animations.js';\nimport { composeCssClasses } from '../../utils/composeCssClasses.js';\nimport ConsoleLogger from '../../modules/ConsoleLogger.js';\nvar logger = ConsoleLogger.new();\nfunction Slide(props) {\n  var className = props.className,\n    _props$shouldRenderMa = props.shouldRenderMask,\n    shouldRenderMask = _props$shouldRenderMa === void 0 ? false : _props$shouldRenderMa,\n    style = props.style,\n    background = props.background,\n    onBackgroundLoad = props.onBackgroundLoad,\n    children = props.children,\n    label = props.label;\n  var _useManager = useManager(),\n    getSlide = _useManager.getSlide,\n    registerSlide = _useManager.registerSlide,\n    removeSlide = _useManager.removeSlide;\n  var _useController = useController(),\n    _useController$state = _useController.state,\n    activeSlide = _useController$state.activeSlide,\n    isSliding = _useController$state.isSliding,\n    prevActiveSlide = _useController$state.prevActiveSlide,\n    slidingDirection = _useController$state.slidingDirection; // controller\n  var _useAnimations = useAnimations(),\n    getSlidingAnimationCssClass = _useAnimations.getSlidingAnimationCssClass;\n  var slideRef = React__default.useRef(null);\n  var slide = getSlide(slideRef);\n  logger.info('[Slide] rerender', 'slide.number: ', slide === null || slide === void 0 ? void 0 : slide.number);\n  var _React__default$useSt = React__default.useState(composeCssClasses('hero-slider-slide', SlideModuleCss.Slide, className)),\n    _React__default$useSt2 = _slicedToArray(_React__default$useSt, 2),\n    classNames = _React__default$useSt2[0],\n    setClassNames = _React__default$useSt2[1];\n  var isActive = activeSlide === (slide === null || slide === void 0 ? void 0 : slide.number);\n  React__default.useEffect(function () {\n    if (slide) {\n      setClassNames(composeCssClasses('hero-slider-slide', SlideModuleCss.Slide, {\n        className: SlideModuleCss.Active,\n        useIf: isActive\n      }, {\n        className: SlideModuleCss.Sliding,\n        useIf: isActive && !isSliding\n      }, {\n        className: getSlidingAnimationCssClass(slide.number, prevActiveSlide, slidingDirection),\n        useIf: isActive && isSliding\n      }));\n    }\n  }, [isActive, isSliding]);\n  React__default.useEffect(function () {\n    if (slideRef) registerSlide(slideRef, label);\n    return function () {\n      if (slideRef) removeSlide(slideRef);\n    };\n  }, []);\n  if (!slide) return null;\n  /**\n   * CSS variables for the transitions.\n   */\n  var CSSVariables = {\n    '--background-animation-duration': (background === null || background === void 0 ? void 0 : background.backgroundAnimationDuration) ? \"\".concat(background.backgroundAnimationDuration, \"ms\") : null,\n    '--background-animation-delay': (background === null || background === void 0 ? void 0 : background.backgroundAnimationDelay) ? \"\".concat(background.backgroundAnimationDelay, \"ms\") : null\n  };\n  return React__default.createElement(\"div\", {\n    ref: slideRef,\n    className: classNames,\n    style: Object.assign(Object.assign({}, style), CSSVariables)\n  }, React__default.createElement(Background, Object.assign({}, background, {\n    onLoad: onBackgroundLoad\n  })), React__default.createElement(\"div\", {\n    className: composeCssClasses('hero-slider-slide-wrapper', SlideModuleCss.Wrapper)\n  }, shouldRenderMask ? React__default.createElement(Mask, {\n    background: background,\n    isActive: isActive\n  }) : null, React__default.createElement(\"div\", {\n    className: composeCssClasses('hero-slider-slide-container', SlideModuleCss.Container, {\n      className: SlideModuleCss.Active,\n      useIf: isActive && !isSliding\n    })\n  }, children)));\n}\nSlide.displayName = 'hero-slider/slide';\nexport { Slide };","map":{"version":3,"mappings":"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","names":["logger","ConsoleLogger","new","Slide","props","className","shouldRenderMask","style","background","onBackgroundLoad","children","label","useManager","getSlide","registerSlide","removeSlide","useController","state","activeSlide","isSliding","prevActiveSlide","slidingDirection","useAnimations","getSlidingAnimationCssClass","slideRef","React","useRef","slide","info","number","useState","composeCssClasses","SlideModuleCss","classNames","setClassNames","isActive","useEffect","Active","useIf","Sliding","CSSVariables","backgroundAnimationDuration","backgroundAnimationDelay","ref","Object","Background","onLoad","Wrapper","Container","displayName"],"sources":["C:\\Users\\Ibrahim\\Desktop\\Glob_az-CargoShippingCompany-main\\node_modules\\hero-slider\\src\\components\\Slide\\index.tsx"],"sourcesContent":["import React from 'react';\nimport SlideModuleCss from './index.module.css';\nimport Background, { BackgroundProps } from './Background';\nimport Mask from './Mask';\nimport { useManager } from '../../modules/Manager';\nimport { useController } from '../../modules/Controller';\nimport { useAnimations } from '../../modules/Animations';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\nimport ConsoleLogger from '../../modules/ConsoleLogger';\n\nconst logger = ConsoleLogger.new();\n\n/**\n * `Slide` component props.\n */\nexport interface SlideProps {\n  /**\n   * Slider className.\n   */\n  className?: React.HTMLProps<HTMLDivElement>['className'];\n  /**\n   * Each slide has a \"Mask\" that serves as an adornment.\n   * They mimic the background, then offsets it a bit. It has an animation during slide transitions.\n   * @default false\n   */\n  shouldRenderMask?: boolean;\n  /**\n   * Defines the background of the `Slide`.\n   * You may pass CSS properties just like you would style the background of a regular HTML element.\n   * The main difference is that the `backgroundImage` property will work just like an image `src` property instead of the typical background image URL.\n   */\n  background?: Partial<BackgroundProps>;\n  /**\n   * If the developer is using a `MenuNav` or `ButtonsNav` component, a label for each slide may be passed.\n   * These labels will be shown in the nav components.\n   */\n  label?: string;\n  /**\n   * Inline CSS styling.\n   */\n  style?: React.CSSProperties;\n  /**\n   * Callback that executes when the background image loads.\n   */\n  onBackgroundLoad?: BackgroundProps['onLoad'];\n}\n\nexport function Slide(props: React.PropsWithChildren<SlideProps>) {\n  const {\n    className,\n    shouldRenderMask = false,\n    style,\n    background,\n    onBackgroundLoad,\n    children,\n    label\n  } = props;\n\n  const { getSlide, registerSlide, removeSlide } = useManager();\n\n  const {\n    state: { activeSlide, isSliding, prevActiveSlide, slidingDirection }\n  } = useController(); // controller\n\n  const { getSlidingAnimationCssClass } = useAnimations();\n\n  const slideRef = React.useRef<HTMLDivElement>(null);\n\n  const slide = getSlide(slideRef);\n\n  logger.info('[Slide] rerender', 'slide.number: ', slide?.number);\n\n  const [classNames, setClassNames] = React.useState(\n    composeCssClasses('hero-slider-slide', SlideModuleCss.Slide, className)\n  );\n\n  const isActive = activeSlide === slide?.number;\n\n  React.useEffect(() => {\n    if (slide) {\n      setClassNames(\n        composeCssClasses(\n          'hero-slider-slide',\n          SlideModuleCss.Slide,\n          { className: SlideModuleCss.Active, useIf: isActive },\n          { className: SlideModuleCss.Sliding, useIf: isActive && !isSliding },\n          {\n            className: getSlidingAnimationCssClass(\n              slide.number,\n              prevActiveSlide,\n              slidingDirection\n            ),\n            useIf: isActive && isSliding\n          }\n        )\n      );\n    }\n  }, [isActive, isSliding]);\n\n  React.useEffect(() => {\n    if (slideRef) registerSlide(slideRef, label);\n    return () => {\n      if (slideRef) removeSlide(slideRef);\n    };\n  }, []);\n\n  if (!slide) return null;\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--background-animation-duration': background?.backgroundAnimationDuration\n      ? `${background.backgroundAnimationDuration}ms`\n      : null,\n    '--background-animation-delay': background?.backgroundAnimationDelay\n      ? `${background.backgroundAnimationDelay}ms`\n      : null\n  };\n\n  return (\n    <div\n      ref={slideRef}\n      className={classNames}\n      style={{\n        ...style,\n        ...CSSVariables\n      }}\n    >\n      <Background {...background} onLoad={onBackgroundLoad} />\n      <div\n        className={composeCssClasses(\n          'hero-slider-slide-wrapper',\n          SlideModuleCss.Wrapper\n        )}\n      >\n        {/* Mask */}\n        {shouldRenderMask ? (\n          <Mask background={background} isActive={isActive} />\n        ) : null}\n\n        {/* Container */}\n        <div\n          className={composeCssClasses(\n            'hero-slider-slide-container',\n            SlideModuleCss.Container,\n            { className: SlideModuleCss.Active, useIf: isActive && !isSliding }\n          )}\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n(Slide as React.FunctionComponent).displayName = 'hero-slider/slide';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}